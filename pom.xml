<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- POM file generated with GWT webAppCreator -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>gx</groupId>
  <artifactId>gwt_rss</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>GWT Maven Archetype</name>

  <properties>
    <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.6.1</gwtVersion>
    <gxtVersion>3.1.1</gxtVersion>
    <!-- GWT needs at least java 1.5 -->
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
      <dependency>
      <groupId>jpa</groupId>
      <artifactId>jpaRss</artifactId>
       <version>0.0.1-SNAPSHOT</version>
<!--        <scope>runtime</scope>  -->
    </dependency>
    
    <dependency>
      <groupId>jv</groupId>
      <artifactId>jvRss2obj</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency> 
    
    <dependency>
      <groupId>gx</groupId>
      <artifactId>gwt_comp</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
  
  <!-- GXT -->  
    <dependency>
	  <groupId>com.sencha.gxt</groupId>
	  <artifactId>gxt</artifactId>
	  <version>${gxtVersion}</version>
<!--   	  <scope>runtime</scope>-->
    </dependency>
<!--     <dependency>
	  <groupId>com.sencha.gxt</groupId>
	  <artifactId>gxt-legacy</artifactId>
	  <version>${gxtVersion}</version>
 	  <scope>runtime</scope>
    </dependency> -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwtVersion}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwtVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
<!--       <scope>runtime</scope> -->
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <!-- requestfactory -->    
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-server</artifactId>
      <version>${gwtVersion}</version>
<!--       <scope>provided</scope> --> 
    </dependency>
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-apt</artifactId>
      <version>${gwtVersion}</version>
<!--       <scope>provided</scope> --> 
    </dependency> 
    
<!-- RequestFactory will use JSR 303 javax.validation if you let it -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>4.1.0.Final</version>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
<!-- Required by Hibernate validator because slf4j-log4j is
     optional in the hibernate-validator POM -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.0</version>
    </dependency>
    
     <dependency>
	    <groupId>org.hibernate.javax.persistence</groupId>
	    <artifactId>hibernate-jpa-2.1-api</artifactId>
	    <version>1.0.0.Final</version>
	    <scope>provided</scope>
     </dependency>
     <dependency>
	    <groupId>org.wildfly</groupId>
	    <artifactId>wildfly-jpa</artifactId>
	    <version>9.0.2.Final</version>
	    <scope>provided</scope>
     </dependency>
     <dependency>
	    <groupId>postgresql</groupId>
	    <artifactId>postgresql</artifactId>
	    <version>9.1-901-1.jdbc4</version>
 	    <scope>provided</scope> 
     </dependency>
    
     <dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>mail</artifactId>
	    <version>1.4</version>
	    <scope>provided</scope>
     </dependency>
     
     <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
     </dependency> 
    <!-- Base64 
     <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.10</version>
     </dependency>-->
    
   </dependencies>

  <build>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
           <dependencies>
        </dependencies>
      </plugin>
  
      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.6.1</version>
        <executions>
          <execution>
          <phase>prepare-package</phase>
          <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <!-- Plugin configuration. There are many available options, see 
          gwt-maven-plugin documentation at codehaus.org -->
        <configuration>
          <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
          <logLevel>INFO</logLevel>
          <runTarget>startpoint.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
          <compileSourcesArtifacts>
               <compileSourcesArtifact>gx:gwt_comp</compileSourcesArtifact>
          </compileSourcesArtifacts> 
          
 <!--           <compileReport>true</compileReport>
          <disableCastChecking>true</disableCastChecking>
          <disableClassMetadata>true</disableClassMetadata>-->
        </configuration>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        
         <executions>
          <execution>
            <phase>compile</phase>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>webapps</outputDirectory>
          <warName>ROOT</warName>
        </configuration>
      </plugin>
      
  </plugins>
  </build>

<profiles>
        <profile>
<!-- When built in OpenShift the openshift profile will be used when invoking mvn. -->
<!-- Use this profile for any OpenShift specific customization your app will need. -->
<!-- By default that is to put the resulting archive into the deployments folder. -->
<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
	<id>openshift</id>
	<build>
		<finalName>gwt_rss</finalName>
		<plugins>
			<plugin>
       <artifactId>maven-war-plugin</artifactId>
       <version>2.4</version>
       <configuration>
         <outputDirectory>webapps</outputDirectory>
         <warName>ROOT</warName>
       </configuration>
     </plugin>

		</plugins>
	</build>
</profile>
    </profiles>
</project>
